<div class="flex flex-col items-center justify-center w-full" id="cart">
  <transition mode="out-in">
    <div
      v-if="isCartLoading && !isCartUpdating"
      class="flex justify-center items-center h-10 pt-20"
    >
      {% render 'spinner' %}
    </div>
    <div
      v-else
      class="w-full"
      style="opacity: 0"
      :style="{ opacity: (isCartLoading && !isCartUpdating) ? 0 : 1 }"
    >
      <ul class="w-full sm:w-5/6 md:w-3/4 xl:w-2/3 mx-auto">
        <div class="grid grid-cols-4 auto-cols-fr gap-4">
          <span
            class="
              col-span-2
              text-center text-sm
              sm:text-base
              text-gray-700
              font-medium
              pb-2
              border-b border-gray-400
              tracking-wide
            "
          >
            PRODUCT
          </span>
          <span
            class="
              col-span-1
              text-center text-sm
              sm:text-base
              text-gray-700
              font-medium
              pb-2
              border-b border-gray-400
              tracking-wide
            "
          >
            QUANTITY
          </span>
          <span
            class="
              col-span-1
              text-center text-sm
              sm:text-base
              text-gray-700
              font-medium
              pb-2
              border-b border-gray-400
              tracking-wide
            "
          >
            PRICE
          </span>
        </div>
        <li
          class="grid grid-cols-4 gap-4"
          v-for="item in cartData.items"
          :key="item.id"
        >
          <a :href="item.url" v-if="item.image" class="justify-self-center">
            <img
              class="h-16 xs:h-20 sm:h-24"
              :src="item.image"
              :alt="item.title"
            />
          </a>
          <div class="flex items-center justify-start xs:justify-self-center">
            <span class="flex flex-col xs:items-center">
              <h3 class="text-xs xs:text-sm font-semibold text-gray-700">
                <a :href="item.url" class="">@{ item.product_title }</a>
              </h3>
              <p class="text-xs xs:text-sm font-light text-gray-700">
                @{ item.variant_title }
              </p>
            </span>
          </div>
          <p
            class="
              text-xs
              xs:text-sm
              font-semibold
              text-right text-gray-700
              flex
              items-center
              justify-center
            "
          >
            <span
              class="
                flex
                items-center
                justify-center
                h-6
                w-full
                px-2
                py-1
                mt-2
                relative
              "
            >
              {% render 'cart-quantity' %}
            </span>
          </p>
          <p
            class="
              text-xs
              xs:text-sm
              font-semibold
              text-right text-gray-700
              flex
              items-center
              justify-center
            "
          >
            @{ toPrice(item.price) }
          </p>
        </li>
      </ul>
      <div class="w-full sm:w-5/6 md:w-3/4 xl:w-2/3 mx-auto flex flex-col">
        <span class="w-full grid grid-cols-4 gap-4">
          <span class="col-span-2 border-t border-gray-400">&nbsp;</span>
          <span class="col-span-1 border-t border-gray-400">&nbsp;</span>
          <span class="col-span-1 border-t border-gray-400">&nbsp;</span>
        </span>
        <span
          class="
            flex
            items-center
            justify-between
            w-full
            sm:w-3/4
            md:w-1/2
            lg:w-1/4
            mx-auto
          "
        >
          <span class="text-gray-700 font-medium text-base sm:text-lg">
            Subtotal:
          </span>
          <span class="text-gray-500 font-medium text-base sm:text-lg">
            @{ toPrice(cartData.items_subtotal_price) }
          </span>
        </span>
        <a
          href="/checkout"
          class="
            block
            text-center
            cursor-pointer
            w-full
            sm:w-3/4
            md:w-1/2
            lg:w-1/4
            mx-auto
            px-4
            py-2
            mt-4
            text-white
            bg-gray-700
            border border-gray-700
            hover:bg-white hover:text-gray-700
            transition-colors
          "
          :class="{ 'pointer-events-none': isCartUpdating }"
        >
          <transition mode="out-in">
            <div
              v-if="isCartUpdating"
              class="flex justify-center items-center h-6"
            >
              {% render 'spinner-small' %}
            </div>
            <span v-else>Checkout</span>
          </transition>
        </a>
      </div>
    </div>
  </transition>
</div>

<script>
  const cartPage = ({ cart }) =>
    Vue.createApp({
      delimiters: ["@{", "}"],
      data() {
        return {};
      },
      computed: {
        cartData() {
          return cart.data;
        },
        cartCount() {
          return this.cartData.item_count;
        },
        isCartLoading() {
          return cart.loading;
        },
        isCartUpdating() {
          return cart.updating;
        },
      },
      methods: {
        toPrice(price) {
          return "$" + (price / 100).toFixed(2);
        },
        incItem(item) {
          store.vue.cartUpdating(true);
          store.vue.incCartItem(item).then(() => store.vue.cartUpdating(false));
        },
        decItem(item) {
          store.vue.cartUpdating(true);
          store.vue.decCartItem(item).then(() => {
            store.vue.cartUpdating(false);
            if (this.cartData.item_count === 0) {
              location.reload();
            }
          });
        },
      },
    }).mount("#cart");

  store.vue.components.push(cartPage);
</script>

<style scoped>
  .v-enter-active {
    animation: fade 0.2s forwards;
  }

  .v-leave-active {
    animation: fade 0.2s reverse;
  }
</style>
