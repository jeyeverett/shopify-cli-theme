<header class="relative bg-white xs:pt-4" id="header">
  <nav class="flex w-full">
    {% render 'feature-nav' %}
  </nav>
  <a href="{{ shop.secure_url }}" class="mt-2 xs:mt-4 block mx-auto text-lg xs:text-xl font-bold text-gray-500" style="width: max-content">
    {{ shop.name }}
  </a>
  <transition name="banner" mode="out-in" @after-enter="focusSearch">
    <nav 
      class="mt-8 px-6 w-5/6 invisible xs:visible flex justify-center mx-auto border-t border-b border-gray-300 shadow"
      v-if="!isSearchVisible"
    >
      {% render 'site-nav' %}
    </nav>
    <nav
      class="hide-element mt-8 px-6 w-5/6 xs:flex justify-center mx-auto relative"
      :class="{ 'show-element': isSearchVisible }"
      id="search-modal"
      v-else
    >
      <input class="w-full border border-gray-300 px-4 shadow text-gray-500 relative z-10" style="height: 38px;" type="text" placeholder="type your search here..." @input="onSearch" v-model="search">
    </nav>
  </transition>
  <div 
    class="hidden w-full h-full fixed top-0 left-0" 
    :class="{ 'z-0': isModalOpen }"
    :style="{ display: isModalOpen ? 'block' : 'none' }"
    v-show="isModalOpen" 
    @click="closeAllModals">
  </div>
</header>

<script>
store.onReady(({ search }) => {
    const header = document.getElementById('header');
    const Header = Vue.createApp({
      data() {
        return {
          search: ''
        }
      },
      created() {
        this.search = search.input;
      },
      computed: {
          isAccountVisible() {
            return store.vue.state.account.visible;
          },
          isMobileVisible() {
            return store.vue.state.mobile.visible;
          },
          isSearchVisible() {
            return store.vue.state.search.visible;
          },
          isModalOpen() {
            if (this.isSearchVisible || this.isMobileVisible || this.isAccountVisible) {
              return true;
            } else {
              return false;
            }
          }
      },  
      methods: {
          toggleAccountModal() {
            store.vue.toggleAccountModal();
          },
          toggleMobileModal() {
            store.vue.toggleMobileModal();
          },
          toggleSearchModal() {
            store.vue.toggleSearchModal();
          },
          toggleNestedLinks(event) {
            console.log(this.$refs)
              this.$refs[event.target.id].classList.toggle('hidden');
              this.$refs[event.target.id].classList.toggle('nested-link-animation-in');
              this.$refs[event.target.id + "-caret-down"].classList.toggle('hidden');
              this.$refs[event.target.id + "-caret-up"].classList.toggle('hidden');
              this.closeAllNested(event.target.id);
          },
          focusSearch() {
            const searchModal = document.getElementById('search-modal');
            if (searchModal) {
              const search = searchModal.firstChild;
              search.focus();
            }
          },
          onSearch() {
            store.vue.state.search.input = this.search;
          },
          closeAllNested(currentNest = null) {
            const nested = Object.keys(this.$refs);
            nested.forEach(nest => {
              //nested links are generated dynamically by liquid
              if (!nest.includes('caret') && nest !== currentNest) {
                this.$refs[nest].classList.add('hidden');
                this.$refs[nest].classList.remove('nested-link-animation-in');
                this.$refs[nest + "-caret-down"].classList.add('hidden');
                this.$refs[nest + "-caret-up"].classList.remove('hidden');
              }
            })
          },
          closeAllModals() {
            store.vue.closeAll();
            this.closeAllNested();
          }
      },
    }).mount(header);
});
</script>

<style scoped>
  .hide-element {
    position: absolute;
    opacity: 0;
  }

  .show-element {
    position: static;
    opacity: 1;
  }

  .account-modal-enter-active {
    animation: animate-modal-right .2s forwards;
  }

  .account-modal-leave-active {
    animation: animate-modal-right .2s reverse;
  }

  .mobile-modal-enter-active {
    animation: animate-modal-left .2s forwards;
  }

  .mobile-modal-leave-active {
    animation: animate-modal-left .2s reverse;
  }

  .banner-enter-active {
    animation: animate-modal-top .2s forwards;
  }

  .banner-leave-active {
    animation: animate-modal-top .2s reverse;
  }

  .nested-link-animation-in {
    animation: animate-modal-left .2s forwards;
  }

  @keyframes animate-modal-right {
    from {
      right: 0;
      opacity: 0;
    }
    to {
      right: 2rem;
      opacity: 1;
    }
  }

  @keyframes animate-modal-left {
    from {
      left: 0;
      opacity: 0;
    }
    to {
      left: 2rem;
      opacity: 1;
    }
  }

  @keyframes animate-modal-top {
    from {
      transform: translateY(-2rem);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
</style>

{% schema %}
{
    "name": "Header",
    "settings": [
        {
            "type": "text",
            "id": "mobile_menu_heading",
            "default": "Menu",
            "label": "Mobile Menu Heading"
        },
        {
            "type": "link_list",
            "id": "menu",
            "default": "main-menu",
            "label": "Main Navigation Menu"
        }
    ]
}
{% endschema %}
